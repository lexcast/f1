{"version":3,"sources":["components/Tilt.js","components/Card.js","utils/image.js","components/DriverFront.js","components/DriverBack.js","components/DriverTeams.js","components/DriverCard.js","components/DriversGrid.js","components/SearchFilter.js","components/TeamsFilter.js","components/Sorter.js","components/Toggler.js","components/App.js","serviceWorker.js","index.js"],"names":["Tilt","children","options","props","el","useRef","useEffect","VanillaTilt","init","current","ref","React","memo","Card","flipped","useState","isFlipped","setIsFlipped","onClick","className","getLogo","teamId","process","getDriver","driverId","itemKey","DriverFront","id","driver","team","style","backgroundColor","color1","backgroundImage","src","alt","title","color","color2","name","split","map","txt","i","arr","length","replace","signature","flags","country","championships","repeat","DriverBack","borderColor","DriverTeams","teams","setSelectedTeam","selectedTeam","c","DriverCard","max","speed","scale","gyroscope","glare","DriversGrid","search","drivers","sort","direction","preference","driversFiltered","Object","keys","key","filter","includes","toLowerCase","accents","number","parseInt","a","b","pa","pb","ca","cb","na","nb","reverse","minHeight","disableHeight","width","numberOfBoxesPerRow","Math","floor","rowCount","ceil","height","rowHeight","rowRenderer","index","slice","preferenceTeam","last","SearchFilter","setSearch","elRef","placeholder","value","onChange","e","target","focus","TeamsFilter","setTeam","setCountry","countries","entries","forEach","v","push","groups","k","r","t","c1","c2","sorts","Sorter","setSort","setDirection","s","Toggler","setFlipped","setPreference","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f4ab56d.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport VanillaTilt from \"vanilla-tilt\";\n\nconst Tilt = ({ children, options, ...props }) => {\n  const el = useRef();\n  useEffect(() => {\n    VanillaTilt.init(el.current, options);\n  });\n\n  return (\n    <div ref={el} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default React.memo(Tilt);\n","import React, { useState, useEffect } from \"react\";\n\nconst Card = ({ children, flipped }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  useEffect(() => {\n    setIsFlipped(flipped);\n  }, [flipped]);\n\n  return (\n    <div\n      onClick={() => setIsFlipped(!isFlipped)}\n      className=\"bg-transparent w-full h-full perspective-wide\"\n    >\n      <div\n        className={\n          \"relative w-full h-full style-preserve-3d transition-transform shadow hover:shadow-lg rounded-lg \" +\n          (isFlipped ? \"rotate-y-half\" : \"rotate-y-none\")\n        }\n      >\n        <div className=\"absolute w-full h-full rounded-lg overflow-hidden backface-hidden\">\n          {children[0]}\n        </div>\n        <div className=\"absolute w-full h-full rotate-y-half rounded-lg overflow-hidden backface-hidden\">\n          {children[1]}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Card);\n","const getLogo = (teamId) =>\n  `${process.env.PUBLIC_URL}/images/logos/${teamId}.png`;\n\nconst getDriver = (driverId, itemKey) =>\n  `${process.env.PUBLIC_URL}/images/drivers/${driverId}/${itemKey}.png`;\n\nexport { getLogo, getDriver };\n","import { flags } from \"data\";\nimport React from \"react\";\nimport { getLogo, getDriver } from \"utils/image\";\n\nconst DriverFront = ({ id, driver, team }) => {\n  return (\n    <div\n      className=\"w-full h-full bg-cover bg-no-repeat bg-center select-none transition-all\"\n      style={{\n        backgroundColor: team.color1,\n        backgroundImage: `url(\"${getDriver(id, team.id)}\")`,\n      }}\n    >\n      <div className=\"absolute top-0 left-0 h-10 w-20 m-2 opacity-50 flex items-center transition-all\">\n        <img\n          src={getLogo(team.id)}\n          alt={team.title}\n          className=\"max-w-full max-h-full transition-all\"\n        />\n      </div>\n      <div className=\"absolute bottom-0 pb-3\" style={{ color: team.color1 }}>\n        <p\n          className=\"font-bungee font-black tracking-tighter text-lg\"\n          style={{ backgroundColor: team.color2 }}\n        >\n          {driver.name.split(\" \").map((txt, i, arr) => {\n            if (arr.length !== i + 1) {\n              return (\n                <span className=\"text-xs\" key={i}>\n                  {txt}\n                </span>\n              );\n            }\n            return <span key={i}>{txt.replace(/\\|/g, \" \")}</span>;\n          })}\n        </p>\n      </div>\n      {false !== driver.signature && (\n        <div className=\"w-12 h-12 flex items-center justify-center absolute right-0 bottom-0 mb-12 mr-5\">\n          <img\n            src={getDriver(id, \"signature\")}\n            alt={id}\n            className=\"signature-filter max-w-full max-h-full\"\n          />\n        </div>\n      )}\n      <div className=\"flex items-center justify-center absolute right-0 top-0 mr-2 text-2xs text-shadow\">\n        {flags[driver.country]}\n      </div>\n      <div className=\"flex flex-row-reverse items-center justify-center absolute right-0 bottom-0 mr-2 text-2xs text-shadow\">\n        {driver.championships > 0 && (\n          <span className=\"text-yellow-400\">\n            {\"★\".repeat(driver.championships)}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DriverFront);\n","import React from \"react\";\nimport { getLogo } from \"utils/image\";\n\nconst DriverBack = ({ team }) => {\n  return (\n    <div\n      className=\"relative w-full border-l-4 border-r-4 h-full inline-flex items-center select-none transition-all\"\n      style={{ backgroundColor: team.color1, borderColor: team.color2 }}\n    >\n      <div className=\"mx-auto h-10 w-24 flex items-center transition-all\">\n        <img\n          src={getLogo(team.id)}\n          alt={team.title}\n          className=\"max-w-full max-h-full mx-auto transition-all\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DriverBack);\n","import React from \"react\";\nimport { getLogo } from \"utils/image\";\n\nconst DriverTeams = ({ driver, teams, setSelectedTeam, selectedTeam }) => {\n  return (\n    <div className=\"overflow-x-hidden h-full scrollbar-hide transition-all\">\n      {driver.teams.map((c) => {\n        const team = teams[c];\n\n        return (\n          <div\n            key={c}\n            onClick={() => setSelectedTeam(c)}\n            className={\n              \"w-8 h-8 p-1 flex items-center cursor-pointer transition-all \" +\n              (selectedTeam === c\n                ? \"\"\n                : \"filter-grayscale hover:filter-none opacity-25 hover:opacity-100\")\n            }\n          >\n            <img\n              src={getLogo(team.id)}\n              alt={team.title}\n              className=\"max-w-full max-h-full mx-auto\"\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default React.memo(DriverTeams);\n","import React, { useState, useEffect } from \"react\";\nimport Tilt from \"./Tilt\";\nimport Card from \"./Card\";\nimport DriverFront from \"./DriverFront\";\nimport DriverBack from \"./DriverBack\";\nimport DriverTeams from \"./DriverTeams\";\n\nconst DriverCard = ({ id, driver, teamId, teams, flipped }) => {\n  const [selectedTeam, setSelectedTeam] = useState(teamId);\n\n  useEffect(() => {\n    setSelectedTeam(teamId);\n  }, [teamId]);\n\n  const team = teams[selectedTeam];\n\n  return (\n    <div className=\"flex my-2 h-64\">\n      <Tilt\n        className=\"w-48 h-64 z-10\"\n        options={{\n          max: 10,\n          speed: 300,\n          scale: 1.05,\n          gyroscope: false,\n          glare: true,\n          \"max-glare\": 0.4,\n        }}\n      >\n        <Card flipped={flipped}>\n          <DriverFront {...{ id, driver, team }} />\n          <DriverBack {...{ driver, team }} />\n        </Card>\n      </Tilt>\n      <DriverTeams\n        {...{ driver, team, teams, setSelectedTeam, selectedTeam }}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(DriverCard);\n","import React from \"react\";\nimport DriverCard from \"./DriverCard\";\nimport accents from \"remove-accents\";\nimport { AutoSizer, List } from \"react-virtualized\";\n\nconst BOX_WIDTH = 224;\nconst BOX_HEIGHT = 264;\n\nconst DriversGrid = ({\n  search,\n  team,\n  drivers,\n  teams,\n  sort,\n  direction,\n  preference,\n  flipped,\n  country,\n}) => {\n  const driversFiltered = Object.keys(drivers)\n    .map((key) => {\n      const driver = drivers[key];\n      driver.id = key;\n\n      return driver;\n    })\n    .filter((driver) => !country || driver.country === country)\n    .filter((driver) => !team || driver.teams.includes(team))\n    .filter(\n      (driver) =>\n        !search ||\n        driver.id.includes(search.toLowerCase().replace(\" \", \"\")) ||\n        driver.name.toLowerCase().includes(search.toLowerCase()) ||\n        accents(driver.name.toLowerCase()).includes(search.toLowerCase()) ||\n        driver.number === parseInt(search)\n    )\n    .sort((a, b) => {\n      const pa = a.name.split(\" \");\n      const pb = b.name.split(\" \");\n\n      let ca = accents(pa[pa.length - 1]).toLowerCase();\n      let cb = accents(pb[pb.length - 1]).toLowerCase();\n      let na = 0;\n      let nb = 0;\n\n      if (sort === \"COUNTRY\") {\n        ca = a.country + ca;\n        cb = b.country + cb;\n      }\n\n      if (sort === \"CHAMPIONSHIPS\") {\n        na = a.championships;\n        nb = b.championships;\n      }\n\n      return na > nb ? -1 : na < nb ? 1 : a.ca > cb ? 1 : ca < cb ? -1 : 0;\n    });\n\n  if (direction) {\n    driversFiltered.reverse();\n  }\n\n  return (\n    <div className=\"bg-gray-800 px-2 py-2 mt-4\">\n      <div\n        style={{ minHeight: \"250px\" }}\n        className=\"border-4 border-white rounded-lg border-dashed px-6 py-5 relative overflow-hidden\"\n      >\n        {driversFiltered.length > 0 ? (\n          <AutoSizer disableHeight>\n            {({ width }) => {\n              const numberOfBoxesPerRow = Math.floor(width / BOX_WIDTH);\n              const rowCount = Math.ceil(\n                driversFiltered.length / numberOfBoxesPerRow\n              );\n\n              return (\n                <List\n                  className=\"focus:outline-none\"\n                  width={width}\n                  height={rowCount > 1 ? 528 : 264}\n                  rowCount={rowCount}\n                  rowHeight={BOX_HEIGHT}\n                  rowRenderer={({ key, index, style }) => {\n                    return (\n                      <div\n                        key={key}\n                        style={style}\n                        className=\"flex items-center justify-center\"\n                      >\n                        {driversFiltered\n                          .slice(\n                            index * numberOfBoxesPerRow,\n                            index * numberOfBoxesPerRow + numberOfBoxesPerRow\n                          )\n                          .map((driver) => {\n                            const preferenceTeam =\n                              preference === \"FIRST\"\n                                ? driver.teams[0]\n                                : preference === \"LAST\"\n                                ? driver.last\n                                  ? driver.last\n                                  : driver.teams[driver.teams.length - 1]\n                                : team || driver.teams[0];\n\n                            return (\n                              <DriverCard\n                                key={driver.id}\n                                id={driver.id}\n                                driver={drivers[driver.id]}\n                                teamId={preferenceTeam}\n                                teams={teams}\n                                flipped={flipped}\n                              />\n                            );\n                          })}\n                      </div>\n                    );\n                  }}\n                />\n              );\n            }}\n          </AutoSizer>\n        ) : (\n          <div className=\"text-center absolute w-full h-full top-0 left-0 flex-wrap text-green-500 flex flex-col justify-center items-center font-bungee font-bold\">\n            <div className=\"text-5xl leading-none\">No drivers found</div>\n            <div className=\"text-lg\">\n              Change filters criteria for other results\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DriversGrid);\n","import React, { useRef } from \"react\";\n\nconst SearchFilter = ({ search, setSearch }) => {\n  const elRef = useRef();\n\n  return (\n    <div className=\"px-6 py-3 flex\">\n      <div className=\"relative flex items-center justify-center\">\n        <input\n          ref={elRef}\n          placeholder=\"Search by name or number...\"\n          className={\n            \"font-bungee text-lg font-bold p-2 focus:bg-cyan-400 outline-none placeholder-cyan-600 focus:text-white focus:placeholder-cyan-200\" +\n            \" \" +\n            (search\n              ? \"text-white bg-cyan-400\"\n              : \"bg-transparent text-cyan-600\")\n          }\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n        />\n        {search && (\n          <button\n            onClick={() => {\n              setSearch(\"\");\n              elRef.current.focus();\n            }}\n            className=\"text-cyan-300 hover:text-cyan-200 font-bold text-xl absolute w-8 h-8 right-0 mr-1\"\n          >\n            ×\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(SearchFilter);\n","import React from \"react\";\nimport { getLogo } from \"utils/image\";\n\nconst TeamsFilter = ({\n  team,\n  setTeam,\n  teams,\n  flags,\n  drivers,\n  country,\n  setCountry,\n}) => {\n  const countries = [];\n  Object.entries(drivers).forEach(([, v]) => {\n    if (!countries.includes(v.country)) {\n      countries.push(v.country);\n    }\n  });\n  const groups = {\n    \"*national\": countries.sort((a, b) => (a > b ? 1 : a < b ? -1 : 0)),\n  };\n\n  Object.entries(teams).forEach(([, v]) => {\n    if (!groups[v.country]) {\n      groups[v.country] = [];\n    }\n\n    groups[v.country].push(v);\n  });\n\n  return (\n    <div className=\"px-6 overflow-x-auto scrollbar-hide flex flex-nowrap\">\n      {Object.keys(groups)\n        .sort((a, b) => (a > b ? 1 : a < b ? -1 : 0))\n        .map((k) => {\n          const r = groups[k];\n\n          return (\n            <div key={k} className=\"inline-block m-1\">\n              <div className=\"text-lg pb-1 text-center border-b border-dashed border-cyan-200\">\n                {flags[k]}\n              </div>\n              {k === \"*national\" ? (\n                <div className=\"w-48 h-32 scrollbar-hide justify-center overflow-auto pt-3 flex flex-wrap\">\n                  {r.map((t) => {\n                    return (\n                      <div\n                        key={t}\n                        title={t}\n                        onClick={() => setCountry(country === t ? null : t)}\n                        className={\n                          \"inline-flex items-center justify-center m-1 w-12 h-12 p-2 border-2 cursor-pointer rounded-full \" +\n                          (country === t\n                            ? \"border-cyan-400\"\n                            : \"border-transparent bg-cyan-200 hover:bg-cyan-300\")\n                        }\n                      >\n                        {flags[t]}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"w-48 h-32 scrollbar-hide justify-center overflow-auto pt-3 flex flex-wrap\">\n                  {r\n                    .sort((a, b) => {\n                      const c1 = (a.country || \"1\") + a.title;\n                      const c2 = (b.country || \"1\") + b.title;\n\n                      return c1 > c2 ? 1 : c1 < c2 ? -1 : 0;\n                    })\n                    .map((t) => {\n                      return (\n                        <div\n                          key={t.id}\n                          title={t.title}\n                          onClick={() => setTeam(team === t.id ? null : t.id)}\n                          className={\n                            \"inline-flex items-center m-1 w-12 h-12 p-2 border-2 cursor-pointer rounded-full \" +\n                            (team === t.id\n                              ? \"border-cyan-400\"\n                              : \"border-transparent bg-cyan-200 hover:bg-cyan-300\")\n                          }\n                        >\n                          <img\n                            src={getLogo(t.id)}\n                            alt={t.title}\n                            className=\"max-h-full max-w-full mx-auto\"\n                          />\n                        </div>\n                      );\n                    })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default React.memo(TeamsFilter);\n","import React from \"react\";\n\nexport const sorts = [\"NAME\", \"COUNTRY\", \"CHAMPIONSHIPS\"];\n\nconst Sorter = ({ sort, setSort, direction, setDirection }) => {\n  return (\n    <div className=\"font-bungee px-6 py-3 flex flex-wrap\">\n      <div\n        onClick={() => setDirection(!direction)}\n        className=\"hover:bg-cyan-200 text-cyan-600 inline-flex text-base items-center font-bold px-2 cursor-pointer\"\n      >\n        {direction ? \"▲\" : \"▼\"}\n      </div>\n      {sorts.map((s) => (\n        <div\n          onClick={() => setSort(s)}\n          key={s}\n          className={\n            \"inline-flex text-base items-center font-bold px-2 cursor-pointer\" +\n            \" \" +\n            (sort === s\n              ? \"text-white bg-cyan-400\"\n              : \"hover:bg-cyan-200 text-cyan-600\")\n          }\n        >\n          {s}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(Sorter);\n","import React from \"react\";\n\nconst Toggler = ({ flipped, setFlipped, setPreference }) => {\n  return (\n    <div className=\"font-bungee px-6 pt-3 flex flex-wrap justify-end\">\n      <div\n        className=\"outline-none hover:bg-cyan-200 text-cyan-600 inline-flex text-base items-center font-bold px-2 cursor-pointer\"\n        onClick={() => setPreference(\"FIRST\")}\n      >\n        FIRST\n      </div>\n      <div\n        className=\"outline-none hover:bg-cyan-200 text-cyan-600 inline-flex text-base items-center font-bold px-2 cursor-pointer\"\n        onClick={() => setPreference(\"LAST\")}\n      >\n        LAST\n      </div>\n      <div\n        className=\"outline-none hover:bg-cyan-200 text-cyan-600 inline-flex text-base items-center font-bold px-2 cursor-pointer\"\n        onClick={() => setFlipped(!flipped)}\n      >\n        FLIP\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Toggler);\n","import React, { useState } from \"react\";\nimport DriversGrid from \"./DriversGrid\";\nimport SearchFilter from \"./SearchFilter\";\nimport TeamsFilter from \"./TeamsFilter\";\nimport Sorter from \"./Sorter\";\nimport Toggler from \"./Toggler\";\nimport { flags, teams, drivers } from \"data\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n  const [team, setTeam] = useState();\n  const [country, setCountry] = useState();\n  const [sort, setSort] = useState(\"NAME\");\n  const [direction, setDirection] = useState(false);\n  const [preference, setPreference] = useState();\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <div className=\"w-full h-full\">\n      <div className=\"z-50 font-bungee bg-cyan-600 text-white text-base font-bold fixed bottom-0 right-0\">\n        I DO NOT OWN ANY IMAGE\n      </div>\n      <SearchFilter {...{ search, setSearch }} />\n      <TeamsFilter\n        {...{ teams, team, setTeam, flags, drivers, country, setCountry }}\n      />\n      <Sorter {...{ sort, setSort, direction, setDirection }} />\n      <Toggler {...{ flipped, setFlipped, setPreference }} />\n      <DriversGrid\n        {...{\n          drivers,\n          teams,\n          search,\n          team,\n          sort,\n          direction,\n          preference,\n          flipped,\n          country,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}